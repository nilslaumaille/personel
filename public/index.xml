<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Nils Laumaillé</title><link>https://hugo-toha.github.io/</link><description>Recent content on Nils Laumaillé</description><generator>Hugo -- gohugo.io</generator><language>fr-FR</language><lastBuildDate>Sat, 18 Feb 2023 23:00:00 +0000</lastBuildDate><atom:link href="https://hugo-toha.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Comment flasher un ESP8266 sous Windows 11</title><link>https://hugo-toha.github.io/posts/informatique/esp8266/</link><pubDate>Sat, 18 Feb 2023 23:00:00 +0000</pubDate><guid>https://hugo-toha.github.io/posts/informatique/esp8266/</guid><description>En cours d&amp;rsquo;écriture Cette page s&amp;rsquo;inscrit dans une opération plus globale qui consiste à inclure un module esp8266 dans le plugin ESPEasy de Jeedom. Sa fonctionnalité sera de servir d&amp;rsquo;émetteur IR pour contrôler une unité intérieure d&amp;rsquo;une climatisation.
La 1ère étape décrite dans cette page consiste donc à flasher un firmware ESPEasy dans un wemos d1 mini et de le paramétrer. Le protocole est donc tout à fait valide pour tout type de finalité.</description></item><item><title>Comment flasher un ESP8266 sous Windows 11</title><link>https://hugo-toha.github.io/posts/informatique/parametrer_esp8266/</link><pubDate>Sat, 18 Feb 2023 23:00:00 +0000</pubDate><guid>https://hugo-toha.github.io/posts/informatique/parametrer_esp8266/</guid><description/></item><item><title>Installer un boitier Flexfuel</title><link>https://hugo-toha.github.io/posts/mecanique/flexfuel/</link><pubDate>Sat, 02 Oct 2021 06:00:23 +0600</pubDate><guid>https://hugo-toha.github.io/posts/mecanique/flexfuel/</guid><description>Cet article fait un peu le résumé de toutes mes recherches sur la notion de boitier éthanol car effectivement le fait de pouvoir rouler un peu moins cher à suscité en moi une certaine curiosité.
Quelques généralités Boitier éthanol, késako ? Les boîtiers E85 sont des boitiers électroniques qui se positionnent sous le capot, au niveau du moteur. Ils permettent au moteur d’injecter la bonne quantité de carburant en fonction de la proportion d’éthanol présente dans le réservoir pour un fonctionnement optimal.</description></item><item><title>Il est ou ? le Nuki ?</title><link>https://hugo-toha.github.io/posts/bricolage/nuki/</link><pubDate>Mon, 08 Jun 2020 06:00:23 +0600</pubDate><guid>https://hugo-toha.github.io/posts/bricolage/nuki/</guid><description>En cours d&amp;rsquo;écriture &amp;hellip;</description></item><item><title>Mettre à jour Portainer</title><link>https://hugo-toha.github.io/posts/omv/portainer_maj/</link><pubDate>Mon, 08 Jun 2020 06:00:23 +0600</pubDate><guid>https://hugo-toha.github.io/posts/omv/portainer_maj/</guid><description>En cours d&amp;rsquo;écriture &amp;hellip;
Dès lors qu&amp;rsquo;une nouvelle version de Portainer est disponible, un bandeau l&amp;rsquo;indique dans la page de Portainer.
Pour le mettre à jour, j&amp;rsquo;ai un peu tourné en rond avant de trouver une solution extrémement simple.
À partir d&amp;rsquo;OpenMediaVault, il suffit de :
Sélectionner l&amp;rsquo;option OMV-Extras présent dans la section Système Cliquer sur l&amp;rsquo;onglet Docker Depuis le menu du haut, choisir Installer dans la liste déroulante de Portainer Attendre que l&amp;rsquo;installation soit terminée Rafraichir la page de Portainer Aussi étrange que cela puisse paraitre et bien que Portainer soit déjà installé, il suffit de le ré-installer pour que l&amp;rsquo;instance en place se mette à jour.</description></item><item><title>Mon installation domotique à base de Jeedom</title><link>https://hugo-toha.github.io/posts/informatique/jeedom/</link><pubDate>Mon, 08 Jun 2020 06:00:23 +0600</pubDate><guid>https://hugo-toha.github.io/posts/informatique/jeedom/</guid><description>En cours d&amp;rsquo;écriture &amp;hellip;</description></item><item><title>Teampass, un gestionnaire de mots de passe collaboratif</title><link>https://hugo-toha.github.io/posts/informatique/teampass/</link><pubDate>Mon, 08 Jun 2020 06:00:23 +0600</pubDate><guid>https://hugo-toha.github.io/posts/informatique/teampass/</guid><description>En cours d&amp;rsquo;écriture &amp;hellip;
Génése Les mots de passe sont partout &amp;hellip; ils sont nécessaires à tout moment, il faut s&amp;rsquo;en souvenir, il faut les changer régulièrement, il faut qu&amp;rsquo;ils soient tous différents, il faut &amp;hellip; il faut &amp;hellip; il faut &amp;hellip; Déjà que pour la gestion personnelle des mots de passe au quotidien, on s&amp;rsquo;arrache les cheveux alors en entreprise ou en équipe, c&amp;rsquo;est un vrai cauchemar pour la sécurité.</description></item><item><title>Go পরিচিতি</title><link>https://hugo-toha.github.io/notes/go/basic/introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo-toha.github.io/notes/go/basic/introduction/</guid><description> Hello World A sample go program is show here.
package main import &amp;#34;fmt&amp;#34; func main() { message := greetMe(&amp;#34;world&amp;#34;) fmt.Println(message) } func greetMe(name string) string { return &amp;#34;Hello, &amp;#34; + name + &amp;#34;!&amp;#34; } Run the program as below:
$ go run hello.go Variables Normal Declaration:
var msg string msg = &amp;#34;Hello&amp;#34; Shortcut:
msg := &amp;#34;Hello&amp;#34; Constants const Phi = 1.618</description></item><item><title>Go বেসিক</title><link>https://hugo-toha.github.io/notes/go/basic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo-toha.github.io/notes/go/basic/</guid><description/></item><item><title>অ্যাডভান্সড</title><link>https://hugo-toha.github.io/notes/go/advanced/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo-toha.github.io/notes/go/advanced/</guid><description/></item><item><title>বেসিক টাইপ সমূহ</title><link>https://hugo-toha.github.io/notes/go/basic/types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo-toha.github.io/notes/go/basic/types/</guid><description>Strings str := &amp;#34;Hello&amp;#34; Multiline string
str := `Multiline string` Numbers Typical types
num := 3 // int num := 3. // float64 num := 3 + 4i // complex128 num := byte(&amp;#39;a&amp;#39;) // byte (alias for uint8) Other Types
var u uint = 7 // uint (unsigned) var p float32 = 22.7 // 32-bit float Arrays // var numbers [5]int numbers := [...]int{0, 0, 0, 0, 0} Pointers func main () { b := *getPointer() fmt.</description></item><item><title>Flow Control</title><link>https://hugo-toha.github.io/notes/go/basic/flow-control/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo-toha.github.io/notes/go/basic/flow-control/</guid><description>Condition if day == &amp;#34;sunday&amp;#34; || day == &amp;#34;saturday&amp;#34; { rest() } else if day == &amp;#34;monday&amp;#34; &amp;amp;&amp;amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(&amp;#34;Uh oh&amp;#34;) Switch switch day { case &amp;#34;sunday&amp;#34;: // cases don&amp;#39;t &amp;#34;fall through&amp;#34; by default! fallthrough case &amp;#34;saturday&amp;#34;: rest() default: work() } Loop for count := 0; count &amp;lt;= 10; count++ { fmt.Println(&amp;#34;My counter is at&amp;#34;, count) } entry := []string{&amp;#34;Jack&amp;#34;,&amp;#34;John&amp;#34;,&amp;#34;Jones&amp;#34;} for i, val := range entry { fmt.</description></item><item><title>ফাইল ম্যানিপুলেশন</title><link>https://hugo-toha.github.io/notes/go/advanced/files/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo-toha.github.io/notes/go/advanced/files/</guid><description> Condition if day == &amp;#34;sunday&amp;#34; || day == &amp;#34;saturday&amp;#34; { rest() } else if day == &amp;#34;monday&amp;#34; &amp;amp;&amp;amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(&amp;#34;Uh oh&amp;#34;)</description></item><item><title>ব্যাশ ভেরিয়েবল</title><link>https://hugo-toha.github.io/notes/bash/basic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo-toha.github.io/notes/bash/basic/</guid><description> Variable NAME=&amp;#34;John&amp;#34; echo $NAME echo &amp;#34;$NAME&amp;#34; echo &amp;#34;${NAME} Condition if [[ -z &amp;#34;$string&amp;#34; ]]; then echo &amp;#34;String is empty&amp;#34; elif [[ -n &amp;#34;$string&amp;#34; ]]; then echo &amp;#34;String is not empty&amp;#34; fi</description></item><item><title>Go এর নোট সমূহ</title><link>https://hugo-toha.github.io/notes/go/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo-toha.github.io/notes/go/</guid><description>Go Notes</description></item><item><title>ব্যাশের নোট সমূহ</title><link>https://hugo-toha.github.io/notes/bash/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hugo-toha.github.io/notes/bash/</guid><description>Bash Notes</description></item></channel></rss>